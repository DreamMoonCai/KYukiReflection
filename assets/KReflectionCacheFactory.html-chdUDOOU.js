import{_ as s,o as a,c as n,a as o}from"./app-8qBaMd0v.js";const e={},l=o(`<h1 id="kreflectioncachefactory-kt" tabindex="-1"><a class="header-anchor" href="#kreflectioncachefactory-kt" aria-hidden="true">#</a> KReflectionCacheFactory <span class="symbol">- kt</span></h1><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p>用于<code>KReflection</code>的缓存拓展封装类。</p></blockquote><h2 id="kclass-cacheproperty-ext-method" tabindex="-1"><a class="header-anchor" href="#kclass-cacheproperty-ext-method" aria-hidden="true">#</a> KClass.cacheProperty <span class="symbol">- ext-method</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">fun</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">KClass</span><span style="color:#F47067;">&lt;*&gt;</span><span style="color:#ADBAC7;">.</span><span style="color:#DCBDFB;">cacheProperty</span><span style="color:#ADBAC7;">(descriptor:</span><span style="color:#F69D50;">String</span><span style="color:#ADBAC7;">?,initiate: </span><span style="color:#F69D50;">KPropertyConditions</span><span style="color:#ADBAC7;">): </span><span style="color:#F69D50;">KPropertyFinder</span><span style="color:#ADBAC7;">.Result</span></span>
<span class="line"></span></code></pre></div><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">fun</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">KClass</span><span style="color:#F47067;">&lt;*&gt;</span><span style="color:#ADBAC7;">.</span><span style="color:#DCBDFB;">cacheProperty</span><span style="color:#ADBAC7;">(attachProperty:</span><span style="color:#F69D50;">KProperty</span><span style="color:#ADBAC7;">&lt;*&gt;,loader: </span><span style="color:#F69D50;">ClassLoader</span><span style="color:#ADBAC7;">?,isUseMember:</span><span style="color:#F69D50;">Boolean</span><span style="color:#ADBAC7;">,initiate: </span><span style="color:#F69D50;">KPropertyConditions</span><span style="color:#ADBAC7;">): </span><span style="color:#F69D50;">KPropertyFinder</span><span style="color:#ADBAC7;">.Result</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p><code>KClass.property</code> 的缓存版本，用于缓存<code>KPropertyFinder.Result</code>避免反复搜索。</p></blockquote><h2 id="kclass-cachepropertysignature-ext-method" tabindex="-1"><a class="header-anchor" href="#kclass-cachepropertysignature-ext-method" aria-hidden="true">#</a> KClass.cachePropertySignature <span class="symbol">- ext-method</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">fun</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">KClass</span><span style="color:#F47067;">&lt;*&gt;</span><span style="color:#ADBAC7;">.</span><span style="color:#DCBDFB;">cachePropertySignature</span><span style="color:#ADBAC7;">(descriptor:</span><span style="color:#F69D50;">String</span><span style="color:#ADBAC7;">?,loader: </span><span style="color:#F69D50;">ClassLoader</span><span style="color:#ADBAC7;">?, initiate: </span><span style="color:#F69D50;">KPropertySignatureConditions</span><span style="color:#ADBAC7;">): </span><span style="color:#F69D50;">KPropertySignatureFinder</span><span style="color:#ADBAC7;">.Result</span></span>
<span class="line"></span></code></pre></div><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">fun</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">KClass</span><span style="color:#F47067;">&lt;*&gt;</span><span style="color:#ADBAC7;">.</span><span style="color:#DCBDFB;">cachePropertySignature</span><span style="color:#ADBAC7;">(attachProperty:</span><span style="color:#F69D50;">KProperty</span><span style="color:#ADBAC7;">&lt;*&gt;,loader: </span><span style="color:#F69D50;">ClassLoader</span><span style="color:#ADBAC7;">?,isUseMember:</span><span style="color:#F69D50;">Boolean</span><span style="color:#ADBAC7;">, initiate: </span><span style="color:#F69D50;">KPropertySignatureConditions</span><span style="color:#ADBAC7;">): </span><span style="color:#F69D50;">KPropertySignatureFinder</span><span style="color:#ADBAC7;">.Result</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p><code>KClass.propertySignature</code> 的缓存版本，用于缓存<code>KPropertySignatureFinder.Result</code>避免反复搜索。</p></blockquote><h2 id="kclass-cachefunction-ext-method" tabindex="-1"><a class="header-anchor" href="#kclass-cachefunction-ext-method" aria-hidden="true">#</a> KClass.cacheFunction <span class="symbol">- ext-method</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">fun</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">KClass</span><span style="color:#F47067;">&lt;*&gt;</span><span style="color:#ADBAC7;">.</span><span style="color:#DCBDFB;">cacheFunction</span><span style="color:#ADBAC7;">(descriptor:</span><span style="color:#F69D50;">String</span><span style="color:#ADBAC7;">?,initiate: </span><span style="color:#F69D50;">KFunctionConditions</span><span style="color:#ADBAC7;">): </span><span style="color:#F69D50;">KFunctionFinder</span><span style="color:#ADBAC7;">.Result</span></span>
<span class="line"></span></code></pre></div><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">fun</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">KClass</span><span style="color:#F47067;">&lt;*&gt;</span><span style="color:#ADBAC7;">.</span><span style="color:#DCBDFB;">cacheFunction</span><span style="color:#ADBAC7;">(attachFunction:</span><span style="color:#F69D50;">KFunction</span><span style="color:#ADBAC7;">&lt;*&gt;,loader: </span><span style="color:#F69D50;">ClassLoader</span><span style="color:#ADBAC7;">?,isUseMember:</span><span style="color:#F69D50;">Boolean</span><span style="color:#ADBAC7;">,initiate: </span><span style="color:#F69D50;">KFunctionConditions</span><span style="color:#ADBAC7;">): </span><span style="color:#F69D50;">KFunctionFinder</span><span style="color:#ADBAC7;">.Result</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p><code>KClass.function</code> 的缓存版本，用于缓存<code>KFunctionFinder.Result</code>避免反复搜索。</p></blockquote><h2 id="kclass-cachefunctionsignature-ext-method" tabindex="-1"><a class="header-anchor" href="#kclass-cachefunctionsignature-ext-method" aria-hidden="true">#</a> KClass.cacheFunctionSignature <span class="symbol">- ext-method</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">fun</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">KClass</span><span style="color:#F47067;">&lt;*&gt;</span><span style="color:#ADBAC7;">.</span><span style="color:#DCBDFB;">cacheFunctionSignature</span><span style="color:#ADBAC7;">(descriptor:</span><span style="color:#F69D50;">String</span><span style="color:#ADBAC7;">?,loader: </span><span style="color:#F69D50;">ClassLoader</span><span style="color:#ADBAC7;">?, initiate: </span><span style="color:#F69D50;">KFunctionSignatureConditions</span><span style="color:#ADBAC7;">): </span><span style="color:#F69D50;">KFunctionSignatureFinder</span><span style="color:#ADBAC7;">.Result</span></span>
<span class="line"></span></code></pre></div><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">fun</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">KClass</span><span style="color:#F47067;">&lt;*&gt;</span><span style="color:#ADBAC7;">.</span><span style="color:#DCBDFB;">cacheFunctionSignature</span><span style="color:#ADBAC7;">(attachFunction:</span><span style="color:#F69D50;">KFunction</span><span style="color:#ADBAC7;">&lt;*&gt;,loader: </span><span style="color:#F69D50;">ClassLoader</span><span style="color:#ADBAC7;">?,isUseMember:</span><span style="color:#F69D50;">Boolean</span><span style="color:#ADBAC7;">, initiate: </span><span style="color:#F69D50;">KFunctionSignatureConditions</span><span style="color:#ADBAC7;">): </span><span style="color:#F69D50;">KFunctionSignatureFinder</span><span style="color:#ADBAC7;">.Result</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p><code>KClass.functionSignature</code> 的缓存版本，用于缓存<code>KFunctionSignatureFinder.Result</code>避免反复搜索。</p></blockquote><h2 id="kclass-cacheconstructor-ext-method" tabindex="-1"><a class="header-anchor" href="#kclass-cacheconstructor-ext-method" aria-hidden="true">#</a> KClass.cacheConstructor <span class="symbol">- ext-method</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">fun</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">KClass</span><span style="color:#F47067;">&lt;*&gt;</span><span style="color:#ADBAC7;">.</span><span style="color:#DCBDFB;">cacheConstructor</span><span style="color:#ADBAC7;">(descriptor:</span><span style="color:#F69D50;">String</span><span style="color:#ADBAC7;">?,initiate: </span><span style="color:#F69D50;">KConstructorConditions</span><span style="color:#ADBAC7;">): </span><span style="color:#F69D50;">KConstructorFinder</span><span style="color:#ADBAC7;">.Result</span></span>
<span class="line"></span></code></pre></div><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">fun</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">KClass</span><span style="color:#F47067;">&lt;*&gt;</span><span style="color:#ADBAC7;">.</span><span style="color:#DCBDFB;">cacheConstructor</span><span style="color:#ADBAC7;">(attachFunction:</span><span style="color:#F69D50;">KFunction</span><span style="color:#ADBAC7;">&lt;*&gt;,loader: </span><span style="color:#F69D50;">ClassLoader</span><span style="color:#ADBAC7;">?,isUseMember:</span><span style="color:#F69D50;">Boolean</span><span style="color:#ADBAC7;">,initiate: </span><span style="color:#F69D50;">KConstructorConditions</span><span style="color:#ADBAC7;">): </span><span style="color:#F69D50;">KConstructorFinder</span><span style="color:#ADBAC7;">.Result</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p><code>KClass.constructor</code> 的缓存版本，用于缓存<code>KConstructorFinder.Result</code>避免反复搜索。</p></blockquote>`,40),t=[l];function p(c,r){return a(),n("div",null,t)}const d=s(e,[["render",p],["__file","KReflectionCacheFactory.html.vue"]]);export{d as default};
