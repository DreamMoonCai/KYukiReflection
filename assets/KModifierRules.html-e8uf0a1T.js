import{_ as e,o as s,c as a,a as o}from"./app-8qBaMd0v.js";const n={},l=o(`<h1 id="modifierrules-class" tabindex="-1"><a class="header-anchor" href="#modifierrules-class" aria-hidden="true">#</a> ModifierRules <span class="symbol">- class</span></h1><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">class</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">ModifierRules</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">private</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">constructor</span><span style="color:#ADBAC7;">()</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p>这是一个 <code>KClass</code>、<code>KCallable</code> 描述符条件实现类。</p></blockquote><p>可对 R8 混淆后的 <code>KClass</code>、<code>KCallable</code> 进行更加详细的定位。</p><h2 id="ispublic-i-ext-field" tabindex="-1"><a class="header-anchor" href="#ispublic-i-ext-field" aria-hidden="true">#</a> isPublic <span class="symbol">- i-ext-field</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> isPublic: </span><span style="color:#F69D50;">Boolean</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p><code>KClass</code>、<code>KCallable</code> 类型是否包含 <code>public</code>。</p></blockquote><h2 id="isprivate-i-ext-field" tabindex="-1"><a class="header-anchor" href="#isprivate-i-ext-field" aria-hidden="true">#</a> isPrivate <span class="symbol">- i-ext-field</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> isPrivate: </span><span style="color:#F69D50;">Boolean</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p><code>KClass</code>、<code>KCallable</code> 类型是否包含 <code>private</code>。</p></blockquote><h2 id="isprotected-i-ext-field" tabindex="-1"><a class="header-anchor" href="#isprotected-i-ext-field" aria-hidden="true">#</a> isProtected <span class="symbol">- i-ext-field</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> isProtected: </span><span style="color:#F69D50;">Boolean</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p><code>KClass</code>、<code>KCallable</code> 类型是否包含 <code>protected</code>。</p></blockquote><h2 id="isstatic-i-ext-field" tabindex="-1"><a class="header-anchor" href="#isstatic-i-ext-field" aria-hidden="true">#</a> isStatic <span class="symbol">- i-ext-field</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> isStatic: </span><span style="color:#F69D50;">Boolean</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p><code>KClass</code>、<code>KCallable</code> 类型是否包含 <code>static</code>。</p></blockquote><p>对于任意的静态 <code>KClass</code>、<code>KCallable</code> 可添加此描述进行确定。</p><div class="custom-container warning"><p class="custom-container-title">注意</p><p>Kotlin → Jvm 后的 <strong>object</strong> 类中的方法并不是静态的。</p></div><h2 id="isfinal-i-ext-field" tabindex="-1"><a class="header-anchor" href="#isfinal-i-ext-field" aria-hidden="true">#</a> isFinal <span class="symbol">- i-ext-field</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> isFinal: </span><span style="color:#F69D50;">Boolean</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p><code>KClass</code>、<code>KCallable</code> 类型是否包含 <code>final</code>。</p></blockquote><div class="custom-container warning"><p class="custom-container-title">注意</p><p>Kotlin → Jvm 后没有 <strong>open</strong> 符号标识的 <strong>Class</strong>、<strong>Member</strong> 和没有任何关联的 <strong>Class</strong>、<strong>Member</strong> 都将为 <strong>final</strong>。</p></div><h2 id="issynchronized-i-ext-field" tabindex="-1"><a class="header-anchor" href="#issynchronized-i-ext-field" aria-hidden="true">#</a> isSynchronized <span class="symbol">- i-ext-field</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> isSynchronized: </span><span style="color:#F69D50;">Boolean</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p><code>KClass</code>、<code>KCallable</code> 类型是否包含 <code>synchronized</code>。</p></blockquote><h2 id="isvolatile-i-ext-field" tabindex="-1"><a class="header-anchor" href="#isvolatile-i-ext-field" aria-hidden="true">#</a> isVolatile <span class="symbol">- i-ext-field</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> isVolatile: </span><span style="color:#F69D50;">Boolean</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p><code>Field</code> 类型是否包含 <code>volatile</code>。</p></blockquote><h2 id="istransient-i-ext-field" tabindex="-1"><a class="header-anchor" href="#istransient-i-ext-field" aria-hidden="true">#</a> isTransient <span class="symbol">- i-ext-field</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> isTransient: </span><span style="color:#F69D50;">Boolean</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p><code>Field</code> 类型是否包含 <code>transient</code>。</p></blockquote><h2 id="isnative-i-ext-field" tabindex="-1"><a class="header-anchor" href="#isnative-i-ext-field" aria-hidden="true">#</a> isNative <span class="symbol">- i-ext-field</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> isNative: </span><span style="color:#F69D50;">Boolean</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p><code>Method</code> 类型是否包含 <code>native</code>。</p></blockquote><p>对于任意 JNI 对接的 <code>Method</code> 可添加此描述进行确定。</p><h2 id="isinterface-i-ext-field" tabindex="-1"><a class="header-anchor" href="#isinterface-i-ext-field" aria-hidden="true">#</a> isInterface <span class="symbol">- i-ext-field</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> isInterface: </span><span style="color:#F69D50;">Boolean</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p><code>KClass</code> 类型是否包含 <code>interface</code>。</p></blockquote><h2 id="isabstract-i-ext-field" tabindex="-1"><a class="header-anchor" href="#isabstract-i-ext-field" aria-hidden="true">#</a> isAbstract <span class="symbol">- i-ext-field</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> isAbstract: </span><span style="color:#F69D50;">Boolean</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p><code>KClass</code>、<code>KCallable</code> 类型是否包含 <code>abstract</code>。</p></blockquote><p>对于任意的抽象 <code>KClass</code>、<code>KCallable</code> 可添加此描述进行确定。</p><h2 id="isstrict-i-ext-field" tabindex="-1"><a class="header-anchor" href="#isstrict-i-ext-field" aria-hidden="true">#</a> isStrict <span class="symbol">- i-ext-field</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> isStrict: </span><span style="color:#F69D50;">Boolean</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p><code>KClass</code>、<code>KCallable</code> 类型是否包含 <code>strictfp</code>。</p></blockquote><h2 id="iskotlin-i-ext-field" tabindex="-1"><a class="header-anchor" href="#iskotlin-i-ext-field" aria-hidden="true">#</a> isKotlin <span class="symbol">- i-ext-field</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> isKotlin: </span><span style="color:#F69D50;">Boolean</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p><code>KClass</code>、<code>KCallable</code> 所属类是否是 <code>Kotlin</code> 类。</p></blockquote><h2 id="iscompanion-i-ext-field" tabindex="-1"><a class="header-anchor" href="#iscompanion-i-ext-field" aria-hidden="true">#</a> isCompanion <span class="symbol">- i-ext-field</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> isCompanion: </span><span style="color:#F69D50;">Boolean</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p><code>KClass</code>、<code>KCallable</code> 所属类是否是 <code>companion object</code> 伴生对象。</p></blockquote><h2 id="isdata-i-ext-field" tabindex="-1"><a class="header-anchor" href="#isdata-i-ext-field" aria-hidden="true">#</a> isData <span class="symbol">- i-ext-field</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> isData: </span><span style="color:#F69D50;">Boolean</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p><code>KClass</code>、<code>KCallable</code> 所属类是否是 <code>data</code> 对象类。</p></blockquote><h2 id="isinner-i-ext-field" tabindex="-1"><a class="header-anchor" href="#isinner-i-ext-field" aria-hidden="true">#</a> isInner <span class="symbol">- i-ext-field</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> isInner: </span><span style="color:#F69D50;">Boolean</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p><code>KClass</code>、<code>KCallable</code> 所属类是否是 <code>inner class</code> 内部类。</p></blockquote><h2 id="issealed-i-ext-field" tabindex="-1"><a class="header-anchor" href="#issealed-i-ext-field" aria-hidden="true">#</a> isSealed <span class="symbol">- i-ext-field</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> isSealed: </span><span style="color:#F69D50;">Boolean</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p><code>KClass</code>、<code>KCallable</code> 所属类是否是 <code>sealed class</code> 密封类。</p></blockquote><h2 id="isfun-i-ext-field" tabindex="-1"><a class="header-anchor" href="#isfun-i-ext-field" aria-hidden="true">#</a> isFun <span class="symbol">- i-ext-field</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> isFun: </span><span style="color:#F69D50;">Boolean</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p><code>KClass</code>、<code>KCallable</code> 所属类是否是 <code>fun class</code> 函数类。</p></blockquote><h2 id="isvalue-i-ext-field" tabindex="-1"><a class="header-anchor" href="#isvalue-i-ext-field" aria-hidden="true">#</a> isValue <span class="symbol">- i-ext-field</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> isValue: </span><span style="color:#F69D50;">Boolean</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p><code>KClass</code>、<code>KCallable</code> 所属类是否是 <code>value class</code> 属性类。</p></blockquote><h2 id="isanonymous-i-ext-field" tabindex="-1"><a class="header-anchor" href="#isanonymous-i-ext-field" aria-hidden="true">#</a> isAnonymous <span class="symbol">- i-ext-field</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> isAnonymous: </span><span style="color:#F69D50;">Boolean</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p><code>KClass</code>、<code>KCallable</code> 所属类是否是 <code>anonymous</code> 匿名类。</p></blockquote><h2 id="isconst-i-ext-field" tabindex="-1"><a class="header-anchor" href="#isconst-i-ext-field" aria-hidden="true">#</a> isConst <span class="symbol">- i-ext-field</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> isConst: </span><span style="color:#F69D50;">Boolean</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p><code>KProperty</code> 是否是 <code>const</code> 编译时常量属性。</p></blockquote><h2 id="islateinit-i-ext-field" tabindex="-1"><a class="header-anchor" href="#islateinit-i-ext-field" aria-hidden="true">#</a> isLateinit <span class="symbol">- i-ext-field</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> isLateinit: </span><span style="color:#F69D50;">Boolean</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p><code>KProperty</code> 是否是 <code>lateinit</code> 延时初始化属性。</p></blockquote><h2 id="isvar-i-ext-field" tabindex="-1"><a class="header-anchor" href="#isvar-i-ext-field" aria-hidden="true">#</a> isVar <span class="symbol">- i-ext-field</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> isVar: </span><span style="color:#F69D50;">Boolean</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p><code>KProperty</code> 是否是 <code>var</code> 可变属性。</p></blockquote><h2 id="isval-i-ext-field" tabindex="-1"><a class="header-anchor" href="#isval-i-ext-field" aria-hidden="true">#</a> isVal <span class="symbol">- i-ext-field</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> isVal: </span><span style="color:#F69D50;">Boolean</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p><code>KProperty</code> 是否是 <code>val</code> 常量属性。</p></blockquote><h2 id="issuspend-i-ext-field" tabindex="-1"><a class="header-anchor" href="#issuspend-i-ext-field" aria-hidden="true">#</a> isSuspend <span class="symbol">- i-ext-field</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> isSuspend: </span><span style="color:#F69D50;">Boolean</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p><code>KCallable</code> 是否是 <code>suspend</code> 可挂起属性/函数。</p></blockquote><h2 id="isexternal-i-ext-field" tabindex="-1"><a class="header-anchor" href="#isexternal-i-ext-field" aria-hidden="true">#</a> isExternal <span class="symbol">- i-ext-field</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> isExternal: </span><span style="color:#F69D50;">Boolean</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p><code>KFunction</code> 是否是 <code>external</code> 外部函数。</p></blockquote><h2 id="isextension-i-ext-field" tabindex="-1"><a class="header-anchor" href="#isextension-i-ext-field" aria-hidden="true">#</a> isExtension <span class="symbol">- i-ext-field</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> isExtension: </span><span style="color:#F69D50;">Boolean</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p><code>KCallable</code> 是否是 <code>extensionRef</code> 拓展属性/函数。</p></blockquote><h2 id="istop-i-ext-field" tabindex="-1"><a class="header-anchor" href="#istop-i-ext-field" aria-hidden="true">#</a> isTop <span class="symbol">- i-ext-field</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> isTop: </span><span style="color:#F69D50;">Boolean</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p><code>KClass</code>、<code>KCallable</code> 所属类是否是 <code>package</code> 顶级类。</p></blockquote><h2 id="isinfix-i-ext-field" tabindex="-1"><a class="header-anchor" href="#isinfix-i-ext-field" aria-hidden="true">#</a> isInfix <span class="symbol">- i-ext-field</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> isInfix: </span><span style="color:#F69D50;">Boolean</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p><code>KFunction</code> 是否是 <code>infix</code> 中缀函数。</p></blockquote><h2 id="isoperator-i-ext-field" tabindex="-1"><a class="header-anchor" href="#isoperator-i-ext-field" aria-hidden="true">#</a> isOperator <span class="symbol">- i-ext-field</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> isOperator: </span><span style="color:#F69D50;">Boolean</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p><code>KFunction</code> 是否是 <code>operator</code> 操作符函数。</p></blockquote><h2 id="isinline-i-ext-field" tabindex="-1"><a class="header-anchor" href="#isinline-i-ext-field" aria-hidden="true">#</a> isInline <span class="symbol">- i-ext-field</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> isInline: </span><span style="color:#F69D50;">Boolean</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p><code>KFunction</code> 是否是 <code>inline</code> 内联函数。</p></blockquote><h2 id="isopen-i-ext-field" tabindex="-1"><a class="header-anchor" href="#isopen-i-ext-field" aria-hidden="true">#</a> isOpen <span class="symbol">- i-ext-field</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> isOpen: </span><span style="color:#F69D50;">Boolean</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p><code>KClass</code>、<code>KCallable</code> 是否是 <code>open</code> 公开继承类/属性/函数。</p></blockquote>`,204),d=[l];function c(i,t){return s(),a("div",null,d)}const r=e(n,[["render",c],["__file","KModifierRules.html.vue"]]);export{r as default};
