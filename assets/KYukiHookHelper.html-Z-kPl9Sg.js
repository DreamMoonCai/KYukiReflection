import{_ as e,o,c as s,a}from"./app-8qBaMd0v.js";const n={},l=a(`<h1 id="kyukihookhelper-object" tabindex="-1"><a class="header-anchor" href="#kyukihookhelper-object" aria-hidden="true">#</a> KYukiHookHelper <span class="symbol">- object</span></h1><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">object</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">KYukiHookHelper</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>新增</code></p><p><strong>功能描述</strong></p><blockquote><p>访问YukiHook部分增强功能。</p></blockquote><h2 id="ismemberhooked-method" tabindex="-1"><a class="header-anchor" href="#ismemberhooked-method" aria-hidden="true">#</a> isMemberHooked <span class="symbol">- method</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">fun</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">isMemberHooked</span><span style="color:#ADBAC7;">(member: </span><span style="color:#F69D50;">Member</span><span style="color:#ADBAC7;">?): </span><span style="color:#F69D50;">Boolean</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p>获取当前 <code>Member</code> 是否被 Hook</p></blockquote><div class="custom-container danger"><p class="custom-container-title">特别注意</p><p>此方法仅在 Hook Api 下有效</p></div><h2 id="invokeoriginalmember-method" tabindex="-1"><a class="header-anchor" href="#invokeoriginalmember-method" aria-hidden="true">#</a> invokeOriginalMember <span class="symbol">- method</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">fun</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">invokeOriginalMember</span><span style="color:#ADBAC7;">(member: </span><span style="color:#F69D50;">Member</span><span style="color:#ADBAC7;">?, instance: </span><span style="color:#F69D50;">Any</span><span style="color:#ADBAC7;">?, args: </span><span style="color:#F69D50;">Array</span><span style="color:#ADBAC7;">&lt;</span><span style="color:#F69D50;">out</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">Any</span><span style="color:#ADBAC7;">?&gt;?): </span><span style="color:#F69D50;">Any</span><span style="color:#ADBAC7;">?</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p>执行原始 <code>Member</code> 未进行 Hook 的 <code>Member</code></p></blockquote><div class="custom-container danger"><p class="custom-container-title">特别注意</p><p>此方法仅在 Hook Api 下有效</p></div>`,20),p=[l];function c(t,r){return o(),s("div",null,p)}const i=e(n,[["render",c],["__file","KYukiHookHelper.html.vue"]]);export{i as default};
