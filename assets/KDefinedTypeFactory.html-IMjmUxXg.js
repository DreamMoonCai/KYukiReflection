import{_ as s,o as a,c as n,a as e}from"./app-8qBaMd0v.js";const l={},o=e(`<h1 id="kdefinedtypefactory-kt" tabindex="-1"><a class="header-anchor" href="#kdefinedtypefactory-kt" aria-hidden="true">#</a> KDefinedTypeFactory <span class="symbol">- kt</span></h1><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p>这是一个内部类型的定义常量类，主要用于反射 API 相关用法的延伸。</p></blockquote><h2 id="vaguekotlin-field" tabindex="-1"><a class="header-anchor" href="#vaguekotlin-field" aria-hidden="true">#</a> VagueKotlin <span class="symbol">- field</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> VagueKotlin: </span><span style="color:#F69D50;">KClass</span><span style="color:#ADBAC7;">&lt;*&gt;</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p>得到模糊类型与<code>YukiReflection</code>通用。</p></blockquote><h2 id="kclass-generic-ext-method" tabindex="-1"><a class="header-anchor" href="#kclass-generic-ext-method" aria-hidden="true">#</a> KClass.generic <span class="symbol">- ext-method</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">fun</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">KClass</span><span style="color:#F47067;">&lt;</span><span style="color:#ADBAC7;">VagueClass</span><span style="color:#F47067;">&gt;</span><span style="color:#ADBAC7;">.</span><span style="color:#DCBDFB;">generic</span><span style="color:#ADBAC7;">(</span><span style="color:#F47067;">vararg</span><span style="color:#ADBAC7;"> params:</span><span style="color:#F69D50;">Any</span><span style="color:#ADBAC7;">): </span><span style="color:#F69D50;">ArrayList</span><span style="color:#ADBAC7;">&lt;</span><span style="color:#F69D50;">Any</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p>获取模糊根的泛型对象。</p></blockquote><p><strong>功能示例</strong></p><p>你可以使用此方法来将未知类型的泛型进行匹配。</p><blockquote><p>示例如下</p></blockquote><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">class</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">ABC</span><span style="color:#ADBAC7;">{</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> temp:</span><span style="color:#F69D50;">bbb</span><span style="color:#ADBAC7;">&lt;</span><span style="color:#F69D50;">Int</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span>
<span class="line"><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> vague </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> ABC::</span><span style="color:#DCBDFB;">class</span><span style="color:#ADBAC7;">.</span><span style="color:#DCBDFB;">property</span><span style="color:#ADBAC7;"> { type </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> VagueKotlin.</span><span style="color:#DCBDFB;">generic</span><span style="color:#ADBAC7;">(Int::</span><span style="color:#DCBDFB;">class</span><span style="color:#ADBAC7;">) }</span></span>
<span class="line"><span style="color:#ADBAC7;">vague </span><span style="color:#F47067;">--&gt;</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> temp:</span><span style="color:#F69D50;">bbb</span><span style="color:#ADBAC7;">&lt;</span><span style="color:#F69D50;">Int</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,21),p=[o];function t(c,r){return a(),n("div",null,p)}const d=s(l,[["render",t],["__file","KDefinedTypeFactory.html.vue"]]);export{d as default};
