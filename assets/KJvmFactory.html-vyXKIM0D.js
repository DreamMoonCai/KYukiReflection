import{_ as s,o as e,c as a,a as o}from"./app-8qBaMd0v.js";const n={},l=o(`<h1 id="kjvmfactory-kt" tabindex="-1"><a class="header-anchor" href="#kjvmfactory-kt" aria-hidden="true">#</a> KJvmFactory <span class="symbol">- kt</span></h1><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p>用于Jvm平台关于Kotlin的增强封装类。</p></blockquote><h2 id="class-kotlinas-ext-field" tabindex="-1"><a class="header-anchor" href="#class-kotlinas-ext-field" aria-hidden="true">#</a> Class.kotlinAs <span class="symbol">- ext-field</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> &lt;</span><span style="color:#F69D50;">T</span><span style="color:#ADBAC7;">&gt; Class</span><span style="color:#F47067;">&lt;</span><span style="color:#ADBAC7;">out T</span><span style="color:#F47067;">&gt;</span><span style="color:#ADBAC7;">.kotlinAs: </span><span style="color:#F69D50;">KClass</span><span style="color:#ADBAC7;">&lt;</span><span style="color:#F69D50;">T</span><span style="color:#ADBAC7;"> &amp; </span><span style="color:#F69D50;">Any</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p>将 <code>Class</code> 强行转换为 <code>KClass</code></p></blockquote><h2 id="class-top-ext-field" tabindex="-1"><a class="header-anchor" href="#class-top-ext-field" aria-hidden="true">#</a> Class.top <span class="symbol">- ext-field</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> Class</span><span style="color:#F47067;">&lt;*&gt;</span><span style="color:#ADBAC7;">.top: </span><span style="color:#F69D50;">KDeclarationContainer</span><span style="color:#ADBAC7;"> </span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p>将 <code>Class</code> 转换为 *Kt.class 顶级 Kotlin 文件类</p></blockquote><h2 id="class-iskotlin-ext-field" tabindex="-1"><a class="header-anchor" href="#class-iskotlin-ext-field" aria-hidden="true">#</a> Class.isKotlin <span class="symbol">- ext-field</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> Class</span><span style="color:#F47067;">&lt;*&gt;</span><span style="color:#ADBAC7;">.isKotlin: </span><span style="color:#F69D50;">Boolean</span><span style="color:#ADBAC7;"> </span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p>检查此 <code>Class</code> 是否是一个 <code>Kotlin</code> 类</p></blockquote><h2 id="class-iskotlinnoerror-ext-field" tabindex="-1"><a class="header-anchor" href="#class-iskotlinnoerror-ext-field" aria-hidden="true">#</a> Class.isKotlinNoError <span class="symbol">- ext-field</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> Class</span><span style="color:#F47067;">&lt;*&gt;</span><span style="color:#ADBAC7;">.isKotlinNoError: </span><span style="color:#F69D50;">Boolean</span><span style="color:#ADBAC7;"> </span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p>检查此 <code>Class</code> 是否是一个 <code>Kotlin</code> 类，并且支持反射不会出现错误</p></blockquote><h2 id="class-isarrayorcollection-ext-field" tabindex="-1"><a class="header-anchor" href="#class-isarrayorcollection-ext-field" aria-hidden="true">#</a> Class.isArrayOrCollection <span class="symbol">- ext-field</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> Class</span><span style="color:#F47067;">&lt;*&gt;</span><span style="color:#ADBAC7;">.isArrayOrCollection: </span><span style="color:#F69D50;">Boolean</span><span style="color:#ADBAC7;"> </span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p>检查此 <code>Class</code> 是否是一个 <code>Array</code> 数组或者 <code>Collection</code>集合类</p></blockquote><h2 id="constructor-instancekotlin-ext-method" tabindex="-1"><a class="header-anchor" href="#constructor-instancekotlin-ext-method" aria-hidden="true">#</a> Constructor.instanceKotlin <span class="symbol">- ext-method</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">fun</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">Constructor</span><span style="color:#F47067;">&lt;*&gt;</span><span style="color:#ADBAC7;">.</span><span style="color:#DCBDFB;">instanceKotlin</span><span style="color:#ADBAC7;">(isUseMember: </span><span style="color:#F69D50;">Boolean</span><span style="color:#ADBAC7;">): </span><span style="color:#F69D50;">KConstructorFinder</span><span style="color:#ADBAC7;">.Result.Instance</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p>将 <code>Constructor</code> 转换为 <code>KConstructorFinder.Result.Instance</code> 可执行类</p></blockquote><p>这将涉及到 <code>Constructor</code> 到 <code>KFunction</code> 的转换，根据 <code>isUseMember</code> 参数决定是否使用 <code>Member</code> 对象，可能触发 <code>Kotlin</code> 反射错误</p><h2 id="method-instance-ext-method" tabindex="-1"><a class="header-anchor" href="#method-instance-ext-method" aria-hidden="true">#</a> Method.instance <span class="symbol">- ext-method</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">fun</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">Method</span><span style="color:#ADBAC7;">.</span><span style="color:#DCBDFB;">instance</span><span style="color:#ADBAC7;">(thisRef: </span><span style="color:#F69D50;">Any</span><span style="color:#ADBAC7;">?): </span><span style="color:#F69D50;">KFunctionSignatureFinder</span><span style="color:#ADBAC7;">.Result.Instance</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p>将 <code>Method</code> 转换为 <code>KFunctionSignatureFinder.Result.Instance</code> 可执行类</p></blockquote><h2 id="field-instance-ext-method" tabindex="-1"><a class="header-anchor" href="#field-instance-ext-method" aria-hidden="true">#</a> Field.instance <span class="symbol">- ext-method</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">fun</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">Field</span><span style="color:#ADBAC7;">.</span><span style="color:#DCBDFB;">instance</span><span style="color:#ADBAC7;">(thisRef: </span><span style="color:#F69D50;">Any</span><span style="color:#ADBAC7;">?): </span><span style="color:#F69D50;">KPropertySignatureFinder</span><span style="color:#ADBAC7;">.Result.Instance</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p>将 <code>Field</code> 转换为 <code>KPropertySignatureFinder.Result.Instance</code> 可执行类</p></blockquote><h2 id="field-kotlin-ext-field" tabindex="-1"><a class="header-anchor" href="#field-kotlin-ext-field" aria-hidden="true">#</a> Field.kotlin <span class="symbol">- ext-field</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> Field.kotlin: </span><span style="color:#F69D50;">KProperty</span><span style="color:#ADBAC7;">&lt;*&gt;</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p>将 <code>Field</code> 使用 <code>KClass.ref</code>通过签名分析方式 转换为 <code>KProperty</code>，此方式不会触发 <code>Kotlin</code> 转换错误</p></blockquote><h2 id="method-kotlin-ext-field" tabindex="-1"><a class="header-anchor" href="#method-kotlin-ext-field" aria-hidden="true">#</a> Method.kotlin <span class="symbol">- ext-field</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> Method.kotlin: </span><span style="color:#F69D50;">KFunction</span><span style="color:#ADBAC7;">&lt;*&gt;</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p>将 <code>Method</code> 使用 <code>KClass.ref</code>通过签名分析方式 转换为 <code>KFunction</code>，此方式不会触发 <code>Kotlin</code> 转换错误</p></blockquote><h2 id="constructor-kotlin-ext-field" tabindex="-1"><a class="header-anchor" href="#constructor-kotlin-ext-field" aria-hidden="true">#</a> Constructor.kotlin <span class="symbol">- ext-field</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> Constructor.kotlin: </span><span style="color:#F69D50;">KFunction</span><span style="color:#ADBAC7;">&lt;*&gt;</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p>将 <code>Constructor</code> 使用 <code>KClass.ref</code>通过签名分析方式 转换为 <code>KFunction</code>，此方式不会触发 <code>Kotlin</code> 转换错误</p></blockquote><h2 id="field-kotlinsimplesignature-ext-field" tabindex="-1"><a class="header-anchor" href="#field-kotlinsimplesignature-ext-field" aria-hidden="true">#</a> Field.kotlinSimpleSignature <span class="symbol">- ext-field</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> Field.kotlinSimpleSignature: </span><span style="color:#F69D50;">String</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p>获取此 <code>Field</code> 在 Kotlin 常用的简单签名</p></blockquote><p><strong>功能示例</strong></p><blockquote><p>示例如下</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">abc</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">; </span><span style="color:#768390;">// --&gt; &quot;getAbc()I&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="method-kotlinsimplesignature-ext-field" tabindex="-1"><a class="header-anchor" href="#method-kotlinsimplesignature-ext-field" aria-hidden="true">#</a> Method.kotlinSimpleSignature <span class="symbol">- ext-field</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> Method.kotlinSimpleSignature: </span><span style="color:#F69D50;">String</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p>获取此 <code>Method</code> 在 Kotlin 常用的简单签名</p></blockquote><p><strong>功能示例</strong></p><blockquote><p>示例如下</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">abc</span><span style="color:#ADBAC7;">(</span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> a, </span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> b); </span><span style="color:#768390;">// --&gt; &quot;abc(II)I&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="constructor-kotlinsimplesignature-ext-field" tabindex="-1"><a class="header-anchor" href="#constructor-kotlinsimplesignature-ext-field" aria-hidden="true">#</a> Constructor.kotlinSimpleSignature <span class="symbol">- ext-field</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> Constructor</span><span style="color:#F47067;">&lt;*&gt;</span><span style="color:#ADBAC7;">.kotlinSimpleSignature: </span><span style="color:#F69D50;">String</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p>获取此 <code>Constructor</code> 在 Kotlin 常用的简单签名</p></blockquote><p><strong>功能示例</strong></p><blockquote><p>示例如下</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">class</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">abc</span><span style="color:#ADBAC7;">(int a, int b){} </span><span style="color:#768390;">// --&gt; &quot;&lt;init&gt;(II)V&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="type-classifier-ext-field" tabindex="-1"><a class="header-anchor" href="#type-classifier-ext-field" aria-hidden="true">#</a> Type.classifier <span class="symbol">- ext-field</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> Type.classifier:</span><span style="color:#F69D50;">KClassifier</span></span>
<span class="line"></span></code></pre></div><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> Type.classifierOrNull:</span><span style="color:#F69D50;">KClassifier</span><span style="color:#ADBAC7;">?</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p>将 <code>JavaType</code> 转换为 <code>KClassifier</code></p></blockquote><h2 id="type-kotlintype-ext-field" tabindex="-1"><a class="header-anchor" href="#type-kotlintype-ext-field" aria-hidden="true">#</a> Type.kotlinType <span class="symbol">- ext-field</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> Type.kotlinType:</span><span style="color:#F69D50;">KType</span></span>
<span class="line"></span></code></pre></div><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> Type.kotlinTypeOrNull:</span><span style="color:#F69D50;">KType</span><span style="color:#ADBAC7;">?</span></span>
<span class="line"></span></code></pre></div><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> Array</span><span style="color:#F47067;">&lt;</span><span style="color:#ADBAC7;">Type</span><span style="color:#F47067;">&gt;</span><span style="color:#ADBAC7;">.kotlinType: </span><span style="color:#F69D50;">Array</span><span style="color:#ADBAC7;">&lt;</span><span style="color:#F69D50;">KType</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"></span></code></pre></div><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> Array</span><span style="color:#F47067;">&lt;</span><span style="color:#ADBAC7;">Type</span><span style="color:#F47067;">&gt;</span><span style="color:#ADBAC7;">.kotlinTypeOrNull: </span><span style="color:#F69D50;">Array</span><span style="color:#ADBAC7;">&lt;</span><span style="color:#F69D50;">KType</span><span style="color:#ADBAC7;">&gt;?</span></span>
<span class="line"></span></code></pre></div><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> Collection</span><span style="color:#F47067;">&lt;</span><span style="color:#ADBAC7;">Type</span><span style="color:#F47067;">&gt;</span><span style="color:#ADBAC7;">.kotlinType: </span><span style="color:#F69D50;">List</span><span style="color:#ADBAC7;">&lt;</span><span style="color:#F69D50;">KType</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"></span></code></pre></div><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> Collection</span><span style="color:#F47067;">&lt;</span><span style="color:#ADBAC7;">Type</span><span style="color:#F47067;">&gt;</span><span style="color:#ADBAC7;">.kotlinTypeOrNull: </span><span style="color:#F69D50;">List</span><span style="color:#ADBAC7;">&lt;</span><span style="color:#F69D50;">KType</span><span style="color:#ADBAC7;">&gt;?</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p>将 <code>JavaType</code> 转换为 <code>KType</code></p></blockquote><h2 id="typevariable-descriptor-ext-field" tabindex="-1"><a class="header-anchor" href="#typevariable-descriptor-ext-field" aria-hidden="true">#</a> TypeVariable.descriptor <span class="symbol">- ext-field</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> TypeVariable</span><span style="color:#F47067;">&lt;*&gt;</span><span style="color:#ADBAC7;">.descriptor:</span><span style="color:#F69D50;">ClassifierDescriptor</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p>将 <code>JavaTypeVariable</code> 转换为 <code>ClassifierDescriptor</code></p></blockquote><h2 id="typevariable-kotlin-ext-field" tabindex="-1"><a class="header-anchor" href="#typevariable-kotlin-ext-field" aria-hidden="true">#</a> TypeVariable.kotlin <span class="symbol">- ext-field</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> TypeVariable</span><span style="color:#F47067;">&lt;*&gt;</span><span style="color:#ADBAC7;">.kotlin:</span><span style="color:#F69D50;">KTypeParameter</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p>将 <code>JavaTypeVariable</code> 转换为 <code>KTypeParameter</code></p></blockquote><h2 id="member-isaccessible-ext-field" tabindex="-1"><a class="header-anchor" href="#member-isaccessible-ext-field" aria-hidden="true">#</a> Member.isAccessible <span class="symbol">- ext-field</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">var</span><span style="color:#ADBAC7;"> Member.isAccessible:</span><span style="color:#F69D50;">Boolean</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p>用于一键设置 <code>Field.isAccessible</code>、<code>Method.isAccessible</code>、<code>Constructor.isAccessible</code></p></blockquote><h2 id="member-kotlin-ext-field" tabindex="-1"><a class="header-anchor" href="#member-kotlin-ext-field" aria-hidden="true">#</a> Member.kotlin <span class="symbol">- ext-field</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> Member.kotlin: </span><span style="color:#F69D50;">KCallable</span><span style="color:#ADBAC7;">&lt;</span><span style="color:#F69D50;">Any</span><span style="color:#ADBAC7;">?&gt;</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p>将 <code>Member</code> 使用 <code>KClass.ref</code>通过签名分析方式 转换为 <code>KCallable</code>，此方式不会触发 <code>Kotlin</code> 转换错误</p></blockquote><h2 id="member-kotlincallable-ext-field" tabindex="-1"><a class="header-anchor" href="#member-kotlincallable-ext-field" aria-hidden="true">#</a> Member.kotlinCallable <span class="symbol">- ext-field</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> Member.kotlinCallable: </span><span style="color:#F69D50;">KCallable</span><span style="color:#ADBAC7;">&lt;</span><span style="color:#F69D50;">Any</span><span style="color:#ADBAC7;">?&gt;</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p>将 <code>Member</code> 使用 <code>KClass.kotlinProperty</code>或 <code>KClass.kotlinFunction</code>方式 转换为 <code>KCallable</code>，此方式官方方式可能会触发错误</p></blockquote><h2 id="member-returntype-ext-field" tabindex="-1"><a class="header-anchor" href="#member-returntype-ext-field" aria-hidden="true">#</a> Member.returnType <span class="symbol">- ext-field</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> Member.returnType: </span><span style="color:#F69D50;">Class</span><span style="color:#ADBAC7;">&lt;</span><span style="color:#F69D50;">out</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">Any</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p>获取 <code>Member</code> 的返回类型</p></blockquote><p><code>Field</code> ---&gt; <code>Field.type</code></p><p><code>Method</code> ---&gt; <code>Method.returnType</code></p><p><code>Constructor</code> ---&gt; <code>Member.getDeclaringClass</code></p>`,156),t=[l];function c(p,r){return e(),a("div",null,t)}const i=s(n,[["render",c],["__file","KJvmFactory.html.vue"]]);export{i as default};
