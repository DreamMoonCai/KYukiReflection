import{_ as s,o as a,c as n,a as e}from"./app-8qBaMd0v.js";const l={},o=e(`<h1 id="kgenericclass-class" tabindex="-1"><a class="header-anchor" href="#kgenericclass-class" aria-hidden="true">#</a> KGenericClass <span class="symbol">- class</span></h1><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">class</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">KGenericClass</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">internal</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">constructor</span><span style="color:#ADBAC7;">(</span><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> type: </span><span style="color:#F69D50;">KType</span><span style="color:#ADBAC7;">):</span><span style="color:#F69D50;">List</span><span style="color:#ADBAC7;">&lt;</span><span style="color:#F69D50;">KTypeProjection</span><span style="color:#ADBAC7;">&gt; </span><span style="color:#F69D50;">by</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">type</span><span style="color:#ADBAC7;">.arguments</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p>当前 <code>KClass</code> 的泛型操作对象。</p></blockquote><h2 id="isvariance-field" tabindex="-1"><a class="header-anchor" href="#isvariance-field" aria-hidden="true">#</a> isVariance <span class="symbol">- field</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">var</span><span style="color:#ADBAC7;"> isVariance: </span><span style="color:#F69D50;">Boolean</span><span style="color:#ADBAC7;">?</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p>此泛型对象被对比检查时是否需要考虑协变/逆变性。</p></blockquote><h2 id="ismarkednullable-field" tabindex="-1"><a class="header-anchor" href="#ismarkednullable-field" aria-hidden="true">#</a> isMarkedNullable <span class="symbol">- field</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">var</span><span style="color:#ADBAC7;"> isMarkedNullable: </span><span style="color:#F69D50;">Boolean</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p>此泛型对象被对比检查时是否需要考虑可空性。</p></blockquote><h2 id="isannotation-field" tabindex="-1"><a class="header-anchor" href="#isannotation-field" aria-hidden="true">#</a> isAnnotation <span class="symbol">- field</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">var</span><span style="color:#ADBAC7;"> isAnnotation: </span><span style="color:#F69D50;">Boolean</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p>此泛型对象被对比检查时是否需要考虑注解一致。</p></blockquote><blockquote><p>示例如下</p></blockquote><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">vararg</span><span style="color:#ADBAC7;"> abc:</span><span style="color:#F69D50;">@UnsafeVariance</span><span style="color:#ADBAC7;"> Int</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="variance-method" tabindex="-1"><a class="header-anchor" href="#variance-method" aria-hidden="true">#</a> variance <span class="symbol">- method</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">fun</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">variance</span><span style="color:#ADBAC7;">(variance:</span><span style="color:#F69D50;">KVariance</span><span style="color:#ADBAC7;">): </span><span style="color:#F69D50;">KTypeProjection</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p>获得当前实例中的泛型指定方差的版本。</p></blockquote><h2 id="argument-method" tabindex="-1"><a class="header-anchor" href="#argument-method" aria-hidden="true">#</a> argument <span class="symbol">- method</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">fun</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">argument</span><span style="color:#ADBAC7;">(index: </span><span style="color:#F69D50;">Int</span><span style="color:#ADBAC7;">): </span><span style="color:#F69D50;">KClass</span><span style="color:#ADBAC7;">&lt;*&gt;?</span></span>
<span class="line"></span></code></pre></div><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">inline</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">fun</span><span style="color:#ADBAC7;"> &lt;</span><span style="color:#F69D50;">reified</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">T</span><span style="color:#ADBAC7;">&gt; </span><span style="color:#DCBDFB;">argument</span><span style="color:#ADBAC7;">(index: </span><span style="color:#F69D50;">Int</span><span style="color:#ADBAC7;">): </span><span style="color:#F69D50;">KClass</span><span style="color:#ADBAC7;">&lt;</span><span style="color:#F69D50;">T</span><span style="color:#ADBAC7;">&gt;?</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p>方法的返回值可为 <code>null</code></p><p><strong>功能描述</strong></p><blockquote><p>获得泛型参数数组下标的 <code>KClass</code> 实例。</p></blockquote><div class="custom-container warning"><p class="custom-container-title">注意</p><p>在运行时获取KClass的行为将导致泛型擦除，获取不到时将会返回 <strong>null</strong>。</p></div><blockquote><p>示例如下</p></blockquote><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#ADBAC7;">当type为 List</span><span style="color:#F47067;">&lt;</span><span style="color:#ADBAC7;">List</span><span style="color:#F47067;">&lt;</span><span style="color:#ADBAC7;">String</span><span style="color:#F47067;">&gt;&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">错误示例 </span><span style="color:#DCBDFB;">argument</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">) </span><span style="color:#F47067;">-&gt;</span><span style="color:#ADBAC7;"> List::</span><span style="color:#DCBDFB;">class</span><span style="color:#ADBAC7;"> 无法获取进一步:</span><span style="color:#F69D50;">argument</span><span style="color:#ADBAC7;">(</span><span style="color:#F69D50;">0</span><span style="color:#ADBAC7;">).</span><span style="color:#DCBDFB;">argument</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">) KClass没有argument方法，当获得KClass后将进行擦除类型</span></span>
<span class="line"><span style="color:#ADBAC7;">应使用 </span><span style="color:#DCBDFB;">generic</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">).</span><span style="color:#DCBDFB;">argument</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">) </span><span style="color:#F47067;">-&gt;</span><span style="color:#ADBAC7;"> String</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="generic-method" tabindex="-1"><a class="header-anchor" href="#generic-method" aria-hidden="true">#</a> generic <span class="symbol">- method</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">fun</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">generic</span><span style="color:#ADBAC7;">(index: </span><span style="color:#F69D50;">Int</span><span style="color:#ADBAC7;">,initiate: </span><span style="color:#F69D50;">KGenericClassDomain</span><span style="color:#ADBAC7;">): </span><span style="color:#F69D50;">KGenericClass</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0.0</code> <code>添加</code></p><p><strong>功能描述</strong></p><blockquote><p>获得泛型参数数组下标的泛型实例。</p></blockquote><blockquote><p>示例如下</p></blockquote><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#ADBAC7;">如 type </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> List</span><span style="color:#F47067;">&lt;</span><span style="color:#ADBAC7;">List</span><span style="color:#F47067;">&lt;</span><span style="color:#ADBAC7;">Int</span><span style="color:#F47067;">&gt;&gt;</span></span>
<span class="line"><span style="color:#DCBDFB;">generic</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">) </span><span style="color:#F47067;">---&gt;</span><span style="color:#ADBAC7;"> List</span><span style="color:#F47067;">&lt;</span><span style="color:#ADBAC7;">Int</span><span style="color:#F47067;">&gt;</span></span>
<span class="line"><span style="color:#DCBDFB;">generic</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">).</span><span style="color:#DCBDFB;">generic</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">) </span><span style="color:#F47067;">---&gt;</span><span style="color:#ADBAC7;"> Int</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,51),p=[o];function t(c,r){return a(),n("div",null,p)}const d=s(l,[["render",t],["__file","KGenericClass.html.vue"]]);export{d as default};
