const e=JSON.parse(`{"key":"v-2d0a870d","path":"/en/","title":"KYukiReflection-Home","lang":"en-US","frontmatter":{"home":true,"title":"KYukiReflection-Home","heroImage":"/images/logo.png","actions":[{"text":"Get Started","link":"/en/guide/home","type":"primary"},{"text":"Changelog","link":"/en/about/changelog","type":"secondary"}],"features":[{"title":"Intuitive","details":"KYukiReflection comes from YukiReflection and follows most of the original content in terms of design logic, making the KYukiReflection experience consistent with the YukiReflection experience."},{"title":"Generic Refinement","details":"For YukiReflection's relatively weak support for generics, this set of APIs perfectly adapts to more possible situations and refines the generic experience."},{"title":"Multiple Conditions","details":"The support for Kotlin is not meant to be discussed on paper but to be expanded in an all-round way. It supports the modifier conditions of all keywords, supports various generics, various customized parameters, and provides more detailed support for retrieval of nullable characteristics and variance characteristics. conditional experience."}],"footer":"Apache-2.0 License | Copyright (C) 2019-2023 HighCapable"},"headers":[{"level":3,"title":"Bring it on! Let reflection become poetic and picturesque","slug":"bring-it-on-let-reflection-become-poetic-and-picturesque","link":"#bring-it-on-let-reflection-become-poetic-and-picturesque","children":[]}],"git":{"updatedTime":1718635014000,"contributors":[{"name":"Dreamland","email":"3527551187@qq.com","commits":7},{"name":"fankesyooni","email":"qzmmcn@163.com","commits":3}]},"filePathRelative":"en/index.md"}`);export{e as data};
