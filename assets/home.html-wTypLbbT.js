import{_ as c,r as l,o as i,c as d,b as e,d as o,e as s,w as n,a as p}from"./app-8qBaMd0v.js";const u={},m=e("h1",{id:"introduce",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#introduce","aria-hidden":"true"},"#"),o(" Introduce")],-1),y=e("code",null,"KYukiReflection",-1),h={href:"https://github.com/HighCapable/YukiReflection",target:"_blank",rel:"noopener noreferrer"},f=e("h2",{id:"background",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#background","aria-hidden":"true"},"#"),o(" Background")],-1),A={href:"https://github.com/HighCapable/YukiReflection",target:"_blank",rel:"noopener noreferrer"},D=p('<p>By supporting more features of Kotlin such as keywords, functional programming, extended functions, generics and other features, <code>KYukiReflection</code> can perform reflection searches more accurately.</p><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><p><code>KYukiReflection</code> is completely built from <code>YukiReflection</code> syntax, you can use <code>KYukiReflection</code> like <code>YukiReflection</code>.</p><p>It can also support the use of <code>Java</code> related class field methods and use a more user-friendly language to implement a more complete reflection solution.</p><h2 id="language-requirement" tabindex="-1"><a class="header-anchor" href="#language-requirement" aria-hidden="true">#</a> Language Requirement</h2><p>Please use Kotlin with <code>YukiReflection</code>. Part of the code structure of the API is also compatible with Java, but the implementation of basic reflection scenarios may not be used at all.</p><p>All Demo sample codes in the document will be described using Kotlin. If you donâ€™t know how to use Kotlin at all, you may not be able to use <code>YukiReflection</code>.</p><h2 id="source-of-inspiration" tabindex="-1"><a class="header-anchor" href="#source-of-inspiration" aria-hidden="true">#</a> Source of Inspiration</h2><p><code>KYukiReflection</code> is a summary and integration of Kotlin&#39;s poor and incomprehensible reflection. The project concept completely refers to <code>YukiReflection</code>. The same set of reflection API can be used in any Java and Android platform projects.</p><p>Now, we only need to write a small amount of code to implement a simple Kotlin-style reflection call.</p><p>With Kotlin&#39;s elegant <strong>lambda</strong> writing method and <code>KYukiReflection</code>, you can make your reflection logic more beautiful and clearer. <strong>Please note that with <code>KYukiReflection</code>, please replace or convert <code>Class</code> to <code>KClass</code> wherever possible. <code>Class</code> will be supported in the future, but if you use this API, please develop a habit of converting <code>KClass</code>.</strong></p><blockquote><p>The following example</p></blockquote>',12),C=e("div",{class:"language-kotlin line-numbers-mode","data-ext":"kt"},[e("pre",{class:"shiki github-dark-dimmed",style:{"background-color":"#22272e"},tabindex:"0"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{color:"#96D0FF"}},'"android.os.SystemProperties"'),e("span",{style:{color:"#ADBAC7"}},"."),e("span",{style:{color:"#DCBDFB"}},"toKClass"),e("span",{style:{color:"#ADBAC7"}},"()")]),o(`
`),e("span",{class:"line"},[e("span",{style:{color:"#ADBAC7"}},"    ."),e("span",{style:{color:"#DCBDFB"}},"function"),e("span",{style:{color:"#ADBAC7"}}," {")]),o(`
`),e("span",{class:"line"},[e("span",{style:{color:"#ADBAC7"}},"        name "),e("span",{style:{color:"#F47067"}},"="),e("span",{style:{color:"#ADBAC7"}}," "),e("span",{style:{color:"#96D0FF"}},'"get"')]),o(`
`),e("span",{class:"line"},[e("span",{style:{color:"#ADBAC7"}},"        "),e("span",{style:{color:"#DCBDFB"}},"param"),e("span",{style:{color:"#ADBAC7"}},"(StringKClass, StringKClass)")]),o(`
`),e("span",{class:"line"},[e("span",{style:{color:"#ADBAC7"}},"    }."),e("span",{style:{color:"#DCBDFB"}},"get"),e("span",{style:{color:"#ADBAC7"}},"()."),e("span",{style:{color:"#DCBDFB"}},"call"),e("span",{style:{color:"#ADBAC7"}},"("),e("span",{style:{color:"#96D0FF"}},'"ro.system.build.fingerprint"'),e("span",{style:{color:"#ADBAC7"}},", "),e("span",{style:{color:"#96D0FF"}},'"none"'),e("span",{style:{color:"#ADBAC7"}},")")]),o(`
`),e("span",{class:"line"})])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),B=e("div",{class:"language-kotlin line-numbers-mode","data-ext":"kt"},[e("pre",{class:"shiki github-dark-dimmed",style:{"background-color":"#22272e"},tabindex:"0"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{color:"#ADBAC7"}},"Class."),e("span",{style:{color:"#DCBDFB"}},"forName"),e("span",{style:{color:"#ADBAC7"}},"("),e("span",{style:{color:"#96D0FF"}},'"android.os.SystemProperties"'),e("span",{style:{color:"#ADBAC7"}},")")]),o(`
`),e("span",{class:"line"},[e("span",{style:{color:"#ADBAC7"}},"    .kotlin")]),o(`
`),e("span",{class:"line"},[e("span",{style:{color:"#ADBAC7"}},"    .staticFunctions")]),o(`
`),e("span",{class:"line"},[e("span",{style:{color:"#ADBAC7"}},"    ."),e("span",{style:{color:"#DCBDFB"}},"first"),e("span",{style:{color:"#ADBAC7"}}," {")]),o(`
`),e("span",{class:"line"},[e("span",{style:{color:"#ADBAC7"}},"        it.name "),e("span",{style:{color:"#F47067"}},"=="),e("span",{style:{color:"#ADBAC7"}}," "),e("span",{style:{color:"#96D0FF"}},'"get"'),e("span",{style:{color:"#ADBAC7"}}," "),e("span",{style:{color:"#F47067"}},"&&")]),o(`
`),e("span",{class:"line"},[e("span",{style:{color:"#ADBAC7"}},"                it.valueParameters["),e("span",{style:{color:"#6CB6FF"}},"0"),e("span",{style:{color:"#ADBAC7"}},"].type.jvmErasure "),e("span",{style:{color:"#F47067"}},"=="),e("span",{style:{color:"#ADBAC7"}}," String::"),e("span",{style:{color:"#DCBDFB"}},"class"),e("span",{style:{color:"#ADBAC7"}}," "),e("span",{style:{color:"#F47067"}},"&&")]),o(`
`),e("span",{class:"line"},[e("span",{style:{color:"#ADBAC7"}},"                it.valueParameters["),e("span",{style:{color:"#6CB6FF"}},"1"),e("span",{style:{color:"#ADBAC7"}},"].type.jvmErasure "),e("span",{style:{color:"#F47067"}},"=="),e("span",{style:{color:"#ADBAC7"}}," String::"),e("span",{style:{color:"#DCBDFB"}},"class")]),o(`
`),e("span",{class:"line"},[e("span",{style:{color:"#ADBAC7"}},"    }."),e("span",{style:{color:"#DCBDFB"}},"call"),e("span",{style:{color:"#ADBAC7"}},"("),e("span",{style:{color:"#96D0FF"}},'"ro.system.build.fingerprint"'),e("span",{style:{color:"#ADBAC7"}},", "),e("span",{style:{color:"#96D0FF"}},'"none"'),e("span",{style:{color:"#ADBAC7"}},")")]),o(`
`),e("span",{class:"line"})])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1);function b(g,k){const a=l("ExternalLinkIcon"),t=l("CodeGroupItem"),r=l("CodeGroup");return i(),d("div",null,[m,e("blockquote",null,[e("p",null,[y,o(" is a reference to a variant of the Kotlin reflection API based on "),e("a",h,[o("YukiReflection"),s(a)]),o(".")])]),f,e("p",null,[o("This is a new API designed to use the Kotlin advanced reflection framework to complete related reflection tasks without changing the original "),e("a",A,[o("YukiReflection"),s(a)]),o(".")]),D,s(r,null,{default:n(()=>[s(t,{title:"KYuki Reflection"},{default:n(()=>[C]),_:1}),s(t,{title:"Kotlin Reflection"},{default:n(()=>[B]),_:1})]),_:1})])}const F=c(u,[["render",b],["__file","home.html.vue"]]);export{F as default};
